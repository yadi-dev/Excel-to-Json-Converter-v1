import pandas as pd
import json
import os
import sys
from colorama import init, Fore, Style

init(autoreset=True)

def print_header(text):
    print(f"\n{Fore.BLUE}{Style.BRIGHT}┌{'─' * 48}┐")
    print(f"│{text.center(48)}│")
    print(f"└{'─' * 48}┘{Style.RESET_ALL}\n")
def print_success(text):
    print(f"{Fore.BLUE}{Style.BRIGHT}[+] {text}{Style.RESET_ALL}")
def print_error(text):
    print(f"{Fore.BLUE}{Style.BRIGHT}[-] {text}{Style.RESET_ALL}")
def print_info(text):
    print(f"{Fore.BLUE}{Style.BRIGHT}[*] {text}{Style.RESET_ALL}")
def process_excel_file(file_name):
    try:
        if not os.path.exists(file_name):
            print(f"File not found: {file_name}")
            return None
        _, ext = os.path.splitext(file_name)
        if ext.lower() not in ['.xlsx', '.xls']:
            print(f"Not an Excel file: {file_name}")
            return None
        df = pd.read_excel(file_name)
        return df.to_dict(orient='records')
    except Exception as e:
        print(f"Error processing {file_name}: {str(e)}")
        return None
def excel_to_json(excel_files, output_json):
    if os.path.exists(output_json):
        with open(output_json, 'r', encoding='utf-8') as json_file:
            combined_data = json.load(json_file)
    else:
        combined_data = {}

    for file in excel_files:
        data = process_excel_file(file)
        if data:
            key = os.path.splitext(os.path.basename(file))[0]
            if key not in combined_data:
                combined_data[key] = data
            else:
                print(f"Data for '{key}' already exists. Skipping this file.")
    with open(output_json, 'w', encoding='utf-8') as json_file:
        json.dump(combined_data, json_file, ensure_ascii=False, indent=2)
    print(f"Combined JSON file updated: {output_json}")
if __name__ == "__main__":
    print_header("Excel to JSON Converter")
    print(f"{Fore.BLUE}{Style.BRIGHT}Generated by yadi-dev{Style.RESET_ALL}\n")
    output_json = "data.json"
    excel_files = []
    while True:
        file_name = input(f"{Fore.BLUE}{Style.BRIGHT}[?] Enter Excel file name (or press Enter to finish): {Style.RESET_ALL}")
        if not file_name:
            break
        data = process_excel_file(file_name)
        if data:
            excel_files.append(file_name)
            print_success(f"File processed successfully: {file_name}")
        else:
            print_error(f"Skipping {file_name}: Failed to process file")
    if not excel_files:
        print_error("No Excel files were entered.")
        sys.exit(1)
    print_info("Processing files...")
    excel_to_json(excel_files, output_json)
    print_success(f"JSON file has been created: {output_json}")
    print_header("Process Completed")
